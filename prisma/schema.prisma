datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Post {
  id         Int          @id @default(autoincrement())
  title      String
  quantity  Int?
  price     Int?
  content    String?
  img        String?
  Sales Int @default(0)
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  createdAt  DateTime     @default(now())
  cart Cart[]
  order OrderItem[]
}
model Category {
  id    Int    @id @default(autoincrement())
  name  String @unique
  posts Post[]
}
model User {
  id        Int      @id @default(autoincrement()) // เปลี่ยนจาก userid เป็น id เพื่อความสอดคล้อง
  name      String?
  email     String   @unique
  password  String
  lineid    String?
  address   String?
  phone     Int?  
  purchaseamount Int @default(0)
  image     String?
  role      String   @default("member")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cart Cart[]
  order Order[]
}
model Cart{
  id        Int      @id @default(autoincrement()) 
  userId  Int
  postId Int
  user    User @relation(fields: [userId], references: [id], onDelete: Cascade)
  post    Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  value Int
  
  @@unique([userId, postId])
}
model Order {
  id         Int       @id @default(autoincrement())
  orderId    String    @unique
  userId     Int
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt  DateTime  @default(now())
  items      OrderItem[]
}

model OrderItem {
  id         Int       @id @default(autoincrement())
  orderId    Int
  order      Order     @relation(fields: [orderId], references: [id], onDelete: Cascade)
  postId     Int
  post       Post      @relation(fields: [postId], references: [id], onDelete: Cascade)
  quantity   Int
  totalPrice Int
  createdAt  DateTime  @default(now())
}

